

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import common.OpenPdf;
import deo.ConnectionProvider;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.table.TableModel;
import java.util.Calendar;
import java.util.AbstractCollection;
import java.util.Date;
import java.sql.PreparedStatement;
import deo.PharmacyUtils;
import java.io.FileOutputStream;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class SellMedicine extends javax.swing.JFrame {
    public String numberPattern = "^[0-9]*$";
    private int finalTotalPrice =0;
    private String billId = "";
    private String Username ="";

    /**
     * Creates new form SellMedicine
     */
    public SellMedicine() {
        initComponents();
    }
    public SellMedicine(String tempUsername) {
        initComponents();
        Username =tempUsername;
        setLocationRelativeTo(null);
      
    }
    
    private void medicineName(String nameOrUniqueId){
    DefaultTableModel model =(DefaultTableModel) MedicineTable.getModel();
    model.setRowCount(0);
        try{
            Connection con =ConnectionProvider.getcon();
            Statement st =  con.createStatement();
            ResultSet rs =st.executeQuery("select *from medicine where name like '"+ nameOrUniqueId +"%' or uniqueId like '"+ nameOrUniqueId +"%'");
            while(rs.next()){
            model.addRow(new Object[]{rs.getString("uniqueId")+"- "+rs.getString("name")});
            }
        
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void clearMedicineField(){
    txtUniqueId.setText("");
         txtName.setText("");
        txtCompanyName.setText("");
        txtPricePerUnit.setText("");
        txtNoOfUnit.setText("");
        txtTotalPrice.setText("");
    }
    public String getUniqueId(String prefix){
    return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        MedicineTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtUniqueId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCompanyName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPricePerUnit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNoOfUnit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        btnAddToCart = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lblFinalTotalPrice = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Sell Medicine");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 12, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 65, 1392, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 0, 28, 30));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 85, -1, -1));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 122, 419, 28));

        MedicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine"
            }
        ));
        MedicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(MedicineTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 185, 419, 490));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setText("Medicine ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 90, -1, -1));
        getContentPane().add(txtUniqueId, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 124, 312, 30));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 177, -1, -1));
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 206, 312, 31));

        jLabel5.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel5.setText("Company Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, -1, -1));

        txtCompanyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompanyNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtCompanyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 296, 312, 31));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setText("Price Per Unit");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 90, -1, -1));
        getContentPane().add(txtPricePerUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 125, 308, 30));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1162, 159, 75, 15));

        txtNoOfUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoOfUnitKeyReleased(evt);
            }
        });
        getContentPane().add(txtNoOfUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 210, 308, 30));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setText("Total Price");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 260, -1, -1));
        getContentPane().add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 290, 308, 31));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel9.setText("NO Of Unit");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 180, -1, -1));

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name", "Company Name", "Price Per Unit", "No Of Units", "Total Price"
            }
        ));
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cartTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 420, 660, 257));

        btnAddToCart.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnAddToCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add to cart.png"))); // NOI18N
        btnAddToCart.setText("Add TO Cart");
        btnAddToCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddToCartMouseClicked(evt);
            }
        });
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 340, -1, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setText("Rs:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 710, 39, -1));

        lblFinalTotalPrice.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblFinalTotalPrice.setText("00");
        getContentPane().add(lblFinalTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 710, -1, -1));

        jButton3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/generate bill & print.png"))); // NOI18N
        jButton3.setText("Purchase & Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 710, -1, 32));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(finalTotalPrice !=0){
        billId =getUniqueId("Bill-");
        
        DefaultTableModel dtm =(DefaultTableModel) cartTable.getModel();
        if(cartTable.getRowCount()!= 0){
        for(int i=0;i<cartTable.getRowCount();i++){
        try{
            Connection con = ConnectionProvider.getcon();
            Statement st =con .createStatement();
            st.executeUpdate("Update medicine set quantity=quantity-"+Integer.parseInt(dtm.getValueAt(i,4).toString())+" where uniqueId="+Integer.parseInt(dtm.getValueAt(i,0).toString()));
            
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
        }
        }
        try{
        SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyy");
        Calendar cal = Calendar.getInstance();
         Connection con = ConnectionProvider.getcon();
        PreparedStatement ps = con.prepareStatement("insert into bill (billId,billDate,totalPaid,generatedBy) values (?,?,?,?)");
        ps.setString(1,billId);
        ps.setString(2,myFormat.format(cal.getTime()));
      ps.setInt(3,finalTotalPrice);
      ps.setString(4,Username);
      ps.executeUpdate();
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
        com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
        try{
            PdfWriter.getInstance(doc,new FileOutputStream(PharmacyUtils.billPath+""+billId+".pdf"));
        doc.open();
        Paragraph PharmacyName = new Paragraph("                           Pharmacy Management System\n ");
        doc.add(PharmacyName);
        Paragraph starLine = new Paragraph("****************************************************************************");
        doc.add(starLine);
        Paragraph details =new Paragraph("\t  Bill ID "+billId+"\nDate :"+ new Date()+"\nTotal Paid: "+finalTotalPrice);
        doc.add(details);
        doc.add(starLine);
        PdfPTable tb1 = new PdfPTable (6);
        tb1.addCell("Medicine ID");
         tb1.addCell("Name");
          tb1.addCell("Company Name");
           tb1.addCell("No Of  Units");
            tb1.addCell(" Sub Total Price ");
            for(int i=0;i<cartTable.getRowCount();i++){
            String a = cartTable.getValueAt(i,0).toString();
             String b = cartTable.getValueAt(i,1).toString();
              String c = cartTable.getValueAt(i,2).toString();
               String d = cartTable.getValueAt(i,3).toString();
                String e = cartTable.getValueAt(i,4).toString();
                 String f = cartTable.getValueAt(i,5).toString();
                 
         tb1.addCell(a);
         tb1.addCell(b);
          tb1.addCell(c);
           tb1.addCell(d);
            tb1.addCell(e);
            tb1.addCell(f);
            }
            doc.add(tb1);
            doc.add(starLine);
            Paragraph thankMsg =new Paragraph("Thank you, Please Visit Again.");
            doc.add(thankMsg);
            OpenPdf.openById(String.valueOf(billId));
            
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
        doc.close();
        setVisible(false);
        new SellMedicine(Username).setVisible(true);
        }
        else{
        JOptionPane.showMessageDialog(null,"Please add some  medicine to cart");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtCompanyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompanyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyNameActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        medicineName("");
        txtUniqueId.setEditable(false);
         txtName.setEditable(false);
        txtCompanyName.setEditable(false);
        txtPricePerUnit.setEditable(false);
        
        txtTotalPrice.setEditable(false);
    }//GEN-LAST:event_formComponentShown

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        String search = txtSearch.getText();
        medicineName(search);
    }//GEN-LAST:event_formKeyReleased

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void MedicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineTableMouseClicked
        // TODO add your handling code here:
        int index =MedicineTable.getSelectedRow();
        TableModel model = MedicineTable.getModel();
        String nameOrUniqueId = model.getValueAt(index,0).toString();  
        String uniqueId[] = nameOrUniqueId.split("-",0);
        try{
            Connection con =ConnectionProvider.getcon();
            Statement st = con.createStatement();
            ResultSet rs =st.executeQuery("select *from medicine where uniqueId="+uniqueId[0]+"");
            while(rs.next())
            {
                txtUniqueId.setText(uniqueId[0]);
                txtName.setText(rs.getString("name"));
                txtCompanyName.setText(rs.getString("companyName"));
                txtPricePerUnit.setText(rs.getString("price"));
                txtNoOfUnit.setText("");
                txtTotalPrice.setText("");
            }
        
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_MedicineTableMouseClicked

    private void txtNoOfUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoOfUnitKeyReleased
        // TODO add your handling code here:
        String noOfUnits= txtNoOfUnit.getText();
        if(!noOfUnits.equals("")){
        String price = txtPricePerUnit.getText();
        if(!noOfUnits.matches(numberPattern)){
         JOptionPane.showMessageDialog(null,"Number of units field is invalid.");
        }
        int totalPrice =Integer.parseInt(noOfUnits)*Integer.parseInt(price);
        txtTotalPrice.setText(String.valueOf(totalPrice));
        }
        else{
        txtTotalPrice.setText("");
        }
    }//GEN-LAST:event_txtNoOfUnitKeyReleased

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        String noOfUnits =txtNoOfUnit.getText();
        String uniqueId =txtUniqueId.getText();
        if(!noOfUnits.equals("") && !uniqueId.equals("") ){
          String name = txtName.getText();
        String companyName =  txtCompanyName.getText();
        String PricePerUnit = txtPricePerUnit.getText();
       String totalPrice = txtTotalPrice.getText();
        int checkStock =0;
        int checkMedicineAlreadyExitInCart =0;
        try{
        Connection con =ConnectionProvider.getcon();
            Statement st =  con.createStatement();
            ResultSet rs =st.executeQuery("select *from medicine where uniqueId="+uniqueId+"");
            while(rs.next()){
            if(rs.getInt("quantity") >= Integer.parseInt(noOfUnits)){
            checkStock =1;
            
            }else{
            JOptionPane.showMessageDialog(null,"Medicine is our of stock. only"+rs.getInt("quantity")+"Left");
            }
            }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        }
        
        if(checkStock == 1){
        DefaultTableModel dtm =(DefaultTableModel)cartTable.getModel();
        if(cartTable.getRowCount()!=0){
        for(int i=0;i<cartTable.getRowCount();i++){
            if(Integer.parseInt(dtm.getValueAt(i,0).toString())==Integer.parseInt(uniqueId))
            {
            checkMedicineAlreadyExitInCart =1;
            JOptionPane.showMessageDialog(null,"Medicine already exist in cast");
            }
        
        }
        }
        if( checkMedicineAlreadyExitInCart  == 0){
            dtm.addRow(new Object[]{uniqueId,name,companyName,PricePerUnit,noOfUnits,totalPrice});
            finalTotalPrice = finalTotalPrice + Integer.parseInt(totalPrice);
            lblFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
            JOptionPane.showMessageDialog(null,"Added Successfully");
            
        }
        
        clearMedicineField();
        }
        }else{
        JOptionPane.showMessageDialog(null,"No of Units and Medicine Id field is Required");
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnAddToCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddToCartMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddToCartMouseClicked

    private void cartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseClicked
        // TODO add your handling code here:
        int index = cartTable.getSelectedRow();
        int a=JOptionPane.showConfirmDialog(null, "Do you want to remove this Medicine ","select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            TableModel model = cartTable.getModel();
            String total =model.getValueAt(index,5).toString();
            finalTotalPrice = finalTotalPrice - Integer.parseInt(total);
            ((DefaultTableModel) cartTable.getModel()).removeRow(index);
           
        }
    }//GEN-LAST:event_cartTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MedicineTable;
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblFinalTotalPrice;
    private javax.swing.JTextField txtCompanyName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNoOfUnit;
    private javax.swing.JTextField txtPricePerUnit;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtUniqueId;
    // End of variables declaration//GEN-END:variables

    

   
}
